------------ 테이블 생성전 이전 테이블 삭제 ------------
-- 온스터디 관련
DROP TABLE ONSTUDY_IMAGE;
DROP TABLE ONSTUDY_BOARD_IMAGE;
DROP TABLE ONSTUDY_BOARD;
DROP TABLE MEMBER_ONSTUDY_LIST;
DROP TABLE ONSTUDY;

-- 학습노트 관련
DROP TABLE STUDYNOTE_TEST;
DROP TABLE STUDYNOTE_COMMENT;
DROP TABLE STUDYNOTE_SET;
DROP TABLE LIKE_DETAIL;
DROP TABLE MEMBER_STUDYNOTE_LIST;
DROP TABLE STUDYNOTE;

-- 카테고리
DROP TABLE STUDY_CATEGORY;

-- 게시판 관련
DROP TABLE BOARD_IMAGE;
DROP TABLE BOARD_COMMENT;
DROP TABLE MEMBER_DECLAR;
DROP TABLE BOARD;

-- 회원 관련
DROP TABLE MEMBER_IMAGE;
DROP TABLE FOLLOW_DETAIL;
DROP TABLE POINT_DETAIL;
DROP TABLE POINT_DETAIL_TYPE;
DROP TABLE MEMBER;
DROP TABLE BANK_TYPE;


-----------------------------------------------------------------------
------------ 테이블, 시퀀스 생성 및 샘플 데이터 삽입 ------------
-----------------------------------------------------------------------
------------ 회원 관련 ------------
-- BANK_TYPE 테이블 생성
CREATE TABLE BANK_TYPE(
	BANK_CD NUMBER PRIMARY KEY,
	BANK_NM VARCHAR2(12) NULL
);

COMMENT ON COLUMN BANK_TYPE.BANK_CD IS '은행 코드';
COMMENT ON COLUMN BANK_TYPE.BANK_NM IS '은행 이름';

INSERT INTO BANK_TYPE VALUES(0, '없음');
INSERT INTO BANK_TYPE VALUES(1, '국민');
INSERT INTO BANK_TYPE VALUES(2, '신한');
INSERT INTO BANK_TYPE VALUES(3, '농협');
INSERT INTO BANK_TYPE VALUES(4, '우리');



-- MEMBER 테이블 생성
CREATE TABLE MEMBER(
	MEMBER_NO NUMBER PRIMARY KEY,
	MEMBER_ID VARCHAR2(30) NOT NULL UNIQUE,
	MEMBER_PWD VARCHAR2(100) NOT NULL,
	MEMBER_NM VARCHAR2(30) NOT NULL,
	MEMBER_PHONE VARCHAR2(13) NOT NULL,
	MEMBER_GRADE CHAR(1) DEFAULT 'G' CHECK(MEMBER_GRADE IN('G', 'A')) NOT NULL,
	MEMBER_ENROLL_DT DATE DEFAULT SYSDATE NOT NULL,
	MEMBER_POINT NUMBER	DEFAULT 0 NOT NULL,
	MEMBER_DECLAR_COUNT NUMBER DEFAULT 0 NOT NULL,
	MEMBER_STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
	MEMBER_ACCOUNT VARCHAR2(30) DEFAULT NULL,
	BANK_CD NUMBER DEFAULT 0 REFERENCES BANK_TYPE
);

COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원 아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '회원 비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NM IS '회원 이름';
COMMENT ON COLUMN MEMBER.MEMBER_PHONE IS '회원 전화번호';
COMMENT ON COLUMN MEMBER.MEMBER_GRADE IS '회원 등급(관리자 : A, 일반 : G)';
COMMENT ON COLUMN MEMBER.MEMBER_ENROLL_DT IS '회원 가입일';
COMMENT ON COLUMN MEMBER.MEMBER_POINT IS '회원 총 포인트';
COMMENT ON COLUMN MEMBER.MEMBER_DECLAR_COUNT IS '회원 누적 신고횟수';
COMMENT ON COLUMN MEMBER.MEMBER_STATUS IS '회원 상태(정상 : Y, 정지 : S, 탈퇴 : N)';
COMMENT ON COLUMN MEMBER.MEMBER_ACCOUNT IS '회원 계좌번호';
COMMENT ON COLUMN MEMBER.BANK_CD IS '은행 코드';

DROP SEQUENCE SEQ_MNO;
CREATE SEQUENCE SEQ_MNO;

INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'admin', 'x61Ey612Kl2gpFL56FT9weDnpSo4AV8j8+qx2AuTHdRyY036xxzTTrw10Wq3+4qQyB+XURPWx1ONxp3Y3pB37A==',
'관리자', '010-0000-0000', 'A', DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'user01', '02DeqFdlQnpEbQRZqnvpfK7a9sO9iISEV7Hzxntivto23dJ/i16UMur0ACYxwsfAxFwzfn5yarbQnsbAtkCJAg==',
'홍길동', '010-1111-1111', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'user02', 'ybuT5RE3Qb/bE69MynKRp21UqUH7gwxtO8uOGrOsKqgPt95nPzymK/si9YTYCIxP0CfaqS2StvpiQ0W5UwyCVg==',
'김유신', '010-2222-2222', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test01', 'test01!@',
'테하나', '010-0101-0101', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test02', 'test02!@',
'테둘', '010-0202-0202', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test03', 'test03!@',
'테셋', '010-0303-0303', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test04', 'test04!@',
'테넷', '010-0404-0404', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test05', 'test05!@',
'테다섯', '010-0505-0505', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test06', 'test06!@',
'테여섯', '010-0606-0606', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test07', 'test07!@',
'테일곱', '010-0707-0707', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test08', 'test08!@',
'테여덟', '010-0808-0808', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test09', 'test09!@',
'테아홉', '010-0909-0909', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);
INSERT INTO MEMBER
VALUES(SEQ_MNO.NEXTVAL, 'test10', 'test10!@',
'테열', '010-1010-1010', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, NULL, DEFAULT);



-- 포인트 상세 내역 분류 테이블 생성
CREATE TABLE POINT_DETAIL_TYPE(
	POINT_DETAIL_CD NUMBER PRIMARY KEY,
    POINT_DETAIL_NM VARCHAR2(100)
);

COMMENT ON COLUMN POINT_DETAIL_TYPE.POINT_DETAIL_CD IS '포인트 상세 내역 코드';
COMMENT ON COLUMN POINT_DETAIL_TYPE.POINT_DETAIL_NM IS '포인트 상세 내역 내용';

INSERT INTO POINT_DETAIL_TYPE VALUES(1, '계정에 포인트 입금');
INSERT INTO POINT_DETAIL_TYPE VALUES(2, '계정에서 포인트 환급');
INSERT INTO POINT_DETAIL_TYPE VALUES(3, '온스터디에 포인트 입금');
INSERT INTO POINT_DETAIL_TYPE VALUES(4, '온스터디에서 포인트 환급');
INSERT INTO POINT_DETAIL_TYPE VALUES(5, '온스터디 취소로 인한 포인트 환급');

--SELECT * FROM POINT_DETAIL_TYPE;


-- 회원 포인트 관리 내역 테이블 생성
CREATE TABLE POINT_DETAIL(
	POINT_NO NUMBER PRIMARY KEY,
	POINT NUMBER NOT NULL,
	POINT_STATUS CHAR(1) CHECK(POINT_STATUS IN('A', 'M')) NOT NULL,
	POINT_UPDATE_DT DATE DEFAULT SYSDATE NOT NULL,
	MEMBER_NO NUMBER REFERENCES MEMBER,
	POINT_DETAIL_CD NUMBER REFERENCES POINT_DETAIL_TYPE
);

COMMENT ON COLUMN POINT_DETAIL.POINT_NO IS '포인트 번호';
COMMENT ON COLUMN POINT_DETAIL.POINT IS '포인트';
COMMENT ON COLUMN POINT_DETAIL.POINT_STATUS IS '포인트 증감 상태(증가 : A, 감소 : M)';
COMMENT ON COLUMN POINT_DETAIL.POINT_UPDATE_DT IS '포인트 증감된 일자';
COMMENT ON COLUMN POINT_DETAIL.MEMBER_NO IS '포인트가 증감된 회원';
COMMENT ON COLUMN POINT_DETAIL.POINT_DETAIL_CD IS '포인트 상세 내역 코드';

DROP SEQUENCE SEQ_PDNO;
CREATE SEQUENCE SEQ_PDNO;


-------------------------- 트리거 생성 -----------------------------
-- POINT_DETAIL 테이블에 INSERT 시 MEMBER 테이블의 POINT값 변경
CREATE OR REPLACE TRIGGER TGR_02
AFTER INSERT ON POINT_DETAIL
FOR EACH ROW -- ROW TRIGGER 명시
    BEGIN        
        -- 포인트가 증가되는 경우
        IF :NEW.POINT_STATUS = 'A'
        THEN
            -- MEMBER 테이블에서 MEMBER_NO가 같은 회원의 POINT 증가
            UPDATE MEMBER SET MEMBER_POINT = MEMBER_POINT + :NEW.POINT
            WHERE MEMBER_NO = :NEW.MEMBER_NO;
        END IF;

        -- 포인트가 감소되는 경우
        IF :NEW.POINT_STATUS = 'M'
        THEN
            -- MEMBER 테이블에서 MEMBER_NO가 같은 회원의 POINT 감소
            UPDATE MEMBER SET MEMBER_POINT = MEMBER_POINT - :NEW.POINT
            WHERE MEMBER_NO = :NEW.MEMBER_NO;
        END IF;
END;
/

INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', '2019-10-01', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'M', '2019-10-25', 2, 2);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 30000, 'A', '2019-11-03', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 20000, 'A', '2019-11-07', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 50000, 'M', '2019-11-19', 2, 2);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', '2019-12-01', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', '2019-12-02', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', '2019-12-03', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', '2019-12-04', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', '2019-12-05', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 20000, 'M', '2019-12-06', 2, 2);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', '2019-12-10', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 30000, 'A', '2019-12-10', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 50000, 'A', '2019-12-15', 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 30000, 'M', '2019-12-27', 2, 2);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 20000, 'M', '2019-12-31', 2, 2);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', DEFAULT, 2, 1);
INSERT INTO POINT_DETAIL
VALUES(SEQ_PDNO.NEXTVAL, 10000, 'A', DEFAULT, 3, 1);


-- 회원별 팔로우 테이블 생성
CREATE TABLE FOLLOW_DETAIL(
	FOLLOWING NUMBER REFERENCES MEMBER,
	FOLLOWER NUMBER REFERENCES MEMBER,
    PRIMARY KEY(FOLLOWING, FOLLOWER)
);

COMMENT ON COLUMN FOLLOW_DETAIL.FOLLOWING IS '팔로잉(팔로우 하는 회원)';
COMMENT ON COLUMN FOLLOW_DETAIL.FOLLOWER IS '팔로워(팔로우 당하는 회원)';


-- 회원 프로필 이미지 테이블 생성
CREATE TABLE MEMBER_IMAGE(
	IMAGE_NO NUMBER PRIMARY KEY,
	IMAGE_PATH VARCHAR2(1000) NOT NULL,
	UPLOAD_DT DATE DEFAULT SYSDATE NOT NULL,
	IMAGE_STATUS CHAR(1) DEFAULT 'Y' CHECK(IMAGE_STATUS IN('Y', 'N')) NOT NULL,
	MEMBER_NO NUMBER REFERENCES MEMBER
);

COMMENT ON COLUMN MEMBER_IMAGE.IMAGE_NO IS '프로필 이미지 번호';
COMMENT ON COLUMN MEMBER_IMAGE.IMAGE_PATH IS '프로필 이미지 경로';
COMMENT ON COLUMN MEMBER_IMAGE.UPLOAD_DT IS '프로필 이미지 업로드 날짜';
COMMENT ON COLUMN MEMBER_IMAGE.IMAGE_STATUS IS '프로필 이미지 상태(정상 : Y, 삭제 : N)';
COMMENT ON COLUMN MEMBER_IMAGE.MEMBER_NO IS '회원 번호';

DROP SEQUENCE SEQ_MEM_IMG;
CREATE SEQUENCE SEQ_MEM_IMG;


------------ 게시판 관련 ------------
-- 게시판 테이블
CREATE TABLE BOARD(
	BOARD_NO NUMBER PRIMARY KEY,
	BOARD_TYPE CHAR(1) CHECK(BOARD_TYPE IN('F', 'S', 'D')) NOT NULL,
	BOARD_TITLE VARCHAR2(100) NOT NULL,
	BOARD_CONTENT CLOB NOT NULL,
	BOARD_CREATE_DT DATE	 DEFAULT SYSDATE NOT NULL,
	BOARD_MODIFY_DT DATE	 DEFAULT SYSDATE NOT NULL,
	BOARD_STATUS CHAR(1) DEFAULT 'Y' CHECK(BOARD_STATUS IN('Y', 'N')) NOT NULL,
	BOARD_COUNT NUMBER DEFAULT 0 NOT NULL,
	BOARD_WRITER NUMBER REFERENCES MEMBER
);

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD.BOARD_TYPE IS '게시글 분류(자유 : F, 건의 : S, 신고 : D)';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '게시글 제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '게시글 내용';
COMMENT ON COLUMN BOARD.BOARD_CREATE_DT IS '게시글 생성일';
COMMENT ON COLUMN BOARD.BOARD_MODIFY_DT IS '게시글 수정일';
COMMENT ON COLUMN BOARD.BOARD_STATUS IS '게시글 상태(정상 : Y, 삭제 : N)';
COMMENT ON COLUMN BOARD.BOARD_COUNT IS '게시글 조회수';
COMMENT ON COLUMN BOARD.BOARD_WRITER IS '게시글 작성자';

DROP SEQUENCE SEQ_BNO;
CREATE SEQUENCE SEQ_BNO;

INSERT INTO BOARD(BOARD_NO, BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER)
VALUES(SEQ_BNO.NEXTVAL, 'F', '게시판 테스트', '게시판 테스트 내용', 1);
INSERT INTO BOARD(BOARD_NO, BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER)
VALUES(SEQ_BNO.NEXTVAL, 'F', '게시판 테스트1', '게시판 테스트 내용1', 2);
INSERT INTO BOARD(BOARD_NO, BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER)
VALUES(SEQ_BNO.NEXTVAL, 'F', '게시판 테스트2', '게시판 테스트 내용2', 3);


-- 신고 처리 내역 테이블 생성
CREATE TABLE MEMBER_DECLAR(
	BOARD_NO NUMBER REFERENCES BOARD PRIMARY KEY,
	DECLAR_STATUS CHAR(1) DEFAULT 'N' CHECK(DECLAR_STATUS IN('Y', 'N')) NOT NULL,
	DECLAR_MEMBER NUMBER REFERENCES MEMBER
);

COMMENT ON COLUMN MEMBER_DECLAR.BOARD_NO IS '신고 게시판 번호';
COMMENT ON COLUMN MEMBER_DECLAR.DECLAR_STATUS IS '신고 처리 상태(미처리 : N, 처리완료 : Y)';
COMMENT ON COLUMN MEMBER_DECLAR.DECLAR_MEMBER IS '신고 당한 회원';


-- 게시판 댓글 테이블 생성
CREATE TABLE BOARD_COMMENT(
	COMMENT_NO NUMBER PRIMARY KEY,
	COMMENT_CONTENT VARCHAR2(3000) NOT NULL,
	COMMENT_CREATE_DT DATE DEFAULT SYSDATE NOT NULL,
	COMMENT_MODIFY_DT DATE DEFAULT SYSDATE NOT NULL,
	BOARD_NO NUMBER REFERENCES BOARD,
	BOARD_COMMENT_WRITER NUMBER REFERENCES MEMBER
);

COMMENT ON COLUMN BOARD_COMMENT.COMMENT_NO IS '댓글 고유 번호';
COMMENT ON COLUMN BOARD_COMMENT.COMMENT_CONTENT IS '댓글 내용';
COMMENT ON COLUMN BOARD_COMMENT.COMMENT_CREATE_DT IS '댓글 생성일';
COMMENT ON COLUMN BOARD_COMMENT.COMMENT_MODIFY_DT IS '댓글 수정일';
COMMENT ON COLUMN BOARD_COMMENT.BOARD_NO IS '댓글이 달린 게시판';
COMMENT ON COLUMN BOARD_COMMENT.BOARD_COMMENT_WRITER IS '댓글 작성자';

DROP SEQUENCE SEQ_BD_CNO;
CREATE SEQUENCE SEQ_BD_CNO;


-- 게시판 이미지 테이블 생성
CREATE TABLE BOARD_IMAGE(
	IMAGE_NO NUMBER PRIMARY KEY,
	IMAGE_PATH VARCHAR2(1000) NOT NULL,
    IMAGE_ORIGIN_NAME VARCHAR2(200),
    IMAGE_CHANGE_NAME VARCHAR2(200),
	UPLOAD_DT DATE DEFAULT SYSDATE NOT NULL,
	IMAGE_STATUS CHAR(1) DEFAULT 'Y' CHECK(IMAGE_STATUS IN('Y', 'N')) NOT NULL,
	BOARD_NO NUMBER REFERENCES BOARD
);

COMMENT ON COLUMN BOARD_IMAGE.IMAGE_NO IS '게시판 이미지 번호';
COMMENT ON COLUMN BOARD_IMAGE.IMAGE_PATH IS '게시판 이미지 경로';
COMMENT ON COLUMN BOARD_IMAGE.IMAGE_ORIGIN_NAME IS '게시판 이미지 원본 이름';
COMMENT ON COLUMN BOARD_IMAGE.IMAGE_CHANGE_NAME IS '게시판 이미지 변경 이름';
COMMENT ON COLUMN BOARD_IMAGE.UPLOAD_DT IS '게시판 이미지 업로드 날짜';
COMMENT ON COLUMN BOARD_IMAGE.IMAGE_STATUS IS '게시판 이미지 상태(정상 : Y, 삭제 : N)';
COMMENT ON COLUMN BOARD_IMAGE.BOARD_NO IS '이미지가 첨부된 게시판';

DROP SEQUENCE SEQ_BD_INO;
CREATE SEQUENCE SEQ_BD_INO;



-- 온스터디, 학습노트 카테고리 테이블 생성
CREATE TABLE STUDY_CATEGORY(
	CATEGORY_CD NUMBER PRIMARY KEY,
	CATEGORY_NM VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN STUDY_CATEGORY.CATEGORY_CD IS '카테고리 번호';
COMMENT ON COLUMN STUDY_CATEGORY.CATEGORY_NM IS '카테고리 이름';

INSERT INTO STUDY_CATEGORY VALUES(1, '영어');
INSERT INTO STUDY_CATEGORY VALUES(2, '중국어');
INSERT INTO STUDY_CATEGORY VALUES(3, '일본어');
INSERT INTO STUDY_CATEGORY VALUES(4, '스페인어');
INSERT INTO STUDY_CATEGORY VALUES(5, '프랑스어');
INSERT INTO STUDY_CATEGORY VALUES(6, '한자');
INSERT INTO STUDY_CATEGORY VALUES(7, 'JAVA');
INSERT INTO STUDY_CATEGORY VALUES(8, 'C언어');
INSERT INTO STUDY_CATEGORY VALUES(9, 'PYTHON');
INSERT INTO STUDY_CATEGORY VALUES(10, '자바스크립트');
INSERT INTO STUDY_CATEGORY VALUES(11, '정보처리기사');
INSERT INTO STUDY_CATEGORY VALUES(12, '수학');
INSERT INTO STUDY_CATEGORY VALUES(13, '한국사');
INSERT INTO STUDY_CATEGORY VALUES(14, '과학');
INSERT INTO STUDY_CATEGORY VALUES(15, '사회');
INSERT INTO STUDY_CATEGORY VALUES(16, '공무원');
INSERT INTO STUDY_CATEGORY VALUES(17, '임용고시');
INSERT INTO STUDY_CATEGORY VALUES(18, '수능');
INSERT INTO STUDY_CATEGORY VALUES(19, '전산세무');
INSERT INTO STUDY_CATEGORY VALUES(20, '기타 등등');


------------ 학습노트 관련 ------------
-- STUDYNOTE 테이블 생성
CREATE TABLE STUDYNOTE(
	STUDYNOTE_NO NUMBER PRIMARY KEY,
	STUDYNOTE_TITLE VARCHAR2(60) NOT NULL,
	STUDYNOTE_CREATE_DT DATE DEFAULT SYSDATE NOT NULL,
	STUDYNOTE_MODIFY_DT DATE DEFAULT SYSDATE NOT NULL,
	STUDYNOTE_STATUS CHAR(1) DEFAULT 'Y' CHECK(STUDYNOTE_STATUS IN('Y', 'N')) NOT NULL,
	STUDYNOTE_WRITER NUMBER REFERENCES MEMBER,
	CATEGORY_CD NUMBER REFERENCES STUDY_CATEGORY
);

COMMENT ON COLUMN STUDYNOTE.STUDYNOTE_NO IS '학습노트 번호';
COMMENT ON COLUMN STUDYNOTE.STUDYNOTE_TITLE IS '학습노트 제목';
COMMENT ON COLUMN STUDYNOTE.STUDYNOTE_CREATE_DT IS '학습노트 생성일';
COMMENT ON COLUMN STUDYNOTE.STUDYNOTE_MODIFY_DT IS '학습노트 수정일';
COMMENT ON COLUMN STUDYNOTE.STUDYNOTE_STATUS IS '학습노트 상태(정상 : Y, 삭제 : N)';
COMMENT ON COLUMN STUDYNOTE.STUDYNOTE_WRITER IS '학습노트 작성자';
COMMENT ON COLUMN STUDYNOTE.CATEGORY_CD IS '학습노트 카테고리';

DROP SEQUENCE SEQ_SN_SNO;
CREATE SEQUENCE SEQ_SN_SNO;

INSERT INTO STUDYNOTE(STUDYNOTE_NO, STUDYNOTE_TITLE, STUDYNOTE_WRITER, CATEGORY_CD)
VALUES(SEQ_SN_SNO.NEXTVAL, '관리자의 예제', 1, 1);
INSERT INTO STUDYNOTE(STUDYNOTE_NO, STUDYNOTE_TITLE, STUDYNOTE_WRITER, CATEGORY_CD)
VALUES(SEQ_SN_SNO.NEXTVAL, '토익 기출단어 모음', 2, 1);
INSERT INTO STUDYNOTE(STUDYNOTE_NO, STUDYNOTE_TITLE, STUDYNOTE_WRITER, CATEGORY_CD)
VALUES(SEQ_SN_SNO.NEXTVAL, 'JAVA 용어 정리', 3, 2);



-- 회원별 학습노트 리스트 테이블 생성
CREATE TABLE MEMBER_STUDYNOTE_LIST(
	MEMBER_NO NUMBER REFERENCES MEMBER,
	STUDYNOTE_NO NUMBER REFERENCES STUDYNOTE,
    PRIMARY KEY(MEMBER_NO, STUDYNOTE_NO)
);

COMMENT ON COLUMN MEMBER_STUDYNOTE_LIST.MEMBER_NO IS '회원';
COMMENT ON COLUMN MEMBER_STUDYNOTE_LIST.STUDYNOTE_NO IS '회원이 가져온 학습노트';

INSERT INTO MEMBER_STUDYNOTE_LIST
VALUES(1, 1);
INSERT INTO MEMBER_STUDYNOTE_LIST
VALUES(2, 2);
INSERT INTO MEMBER_STUDYNOTE_LIST
VALUES(3, 2);



-- 회원별 학습노트 좋아요 내역 테이블 생성
CREATE TABLE LIKE_DETAIL(
	MEMBER_NO NUMBER REFERENCES MEMBER,
	STUDYNOTE_NO NUMBER REFERENCES STUDYNOTE,
	LIKE_DT DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY(MEMBER_NO, STUDYNOTE_NO)
);

COMMENT ON COLUMN LIKE_DETAIL.MEMBER_NO IS '좋아요를 누른 회원';
COMMENT ON COLUMN LIKE_DETAIL.STUDYNOTE_NO IS '학습노트';
COMMENT ON COLUMN LIKE_DETAIL.LIKE_DT IS '좋아요를 누른 시간';


-- STUDYNOTE_SET 테이블 생성
CREATE TABLE STUDYNOTE_SET(
	SET_NO NUMBER PRIMARY KEY,
	SET_WORD VARCHAR2(90) NOT NULL,
	SET_MEAN VARCHAR2(1000) NOT NULL,
	STUDYNOTE_NO NUMBER REFERENCES STUDYNOTE
);

COMMENT ON COLUMN STUDYNOTE_SET.SET_NO IS '학습노트 세트 번호';
COMMENT ON COLUMN STUDYNOTE_SET.SET_WORD IS '세트 단어';
COMMENT ON COLUMN STUDYNOTE_SET.SET_MEAN IS '세트 뜻';
COMMENT ON COLUMN STUDYNOTE_SET.STUDYNOTE_NO IS '포함하는 학습노트';

DROP SEQUENCE SEQ_SN_SETNO;
CREATE SEQUENCE SEQ_SN_SETNO;

INSERT INTO STUDYNOTE_SET VALUES(SEQ_SN_SETNO.NEXTVAL, '관리자', '천재이다', 1);
INSERT INTO STUDYNOTE_SET VALUES(SEQ_SN_SETNO.NEXTVAL, '사용자', '천재이다', 1);


-- 학습노트 댓글 테이블
CREATE TABLE STUDYNOTE_COMMENT(
	COMMENT_NO NUMBER PRIMARY KEY,
	COMMENT_CONTENT VARCHAR2(3000) NOT NULL,
	COMMENT_CREATE_DT DATE DEFAULT SYSDATE NOT NULL,
	COMMENT_MODIFY_DT DATE DEFAULT SYSDATE NOT NULL,
	STUDYNOTE_NO NUMBER REFERENCES STUDYNOTE,
	STUDYNOTE_COMMENT_WRITER NUMBER REFERENCES MEMBER
);

COMMENT ON COLUMN STUDYNOTE_COMMENT.COMMENT_NO IS '댓글 번호';
COMMENT ON COLUMN STUDYNOTE_COMMENT.COMMENT_CONTENT IS '댓글 내용';
COMMENT ON COLUMN STUDYNOTE_COMMENT.COMMENT_CREATE_DT IS '댓글 생성일';
COMMENT ON COLUMN STUDYNOTE_COMMENT.COMMENT_MODIFY_DT IS '댓글 수정일';
COMMENT ON COLUMN STUDYNOTE_COMMENT.STUDYNOTE_NO IS '댓글이 달린 학습노트';
COMMENT ON COLUMN STUDYNOTE_COMMENT.STUDYNOTE_COMMENT_WRITER IS '댓글 작성자';


-- 회원별 학습노트 문제 내역
CREATE TABLE STUDYNOTE_TEST (
	STUDYNOTE_TESTER NUMBER REFERENCES MEMBER,
	SET_NO NUMBER REFERENCES STUDYNOTE_SET,
	CORRECT_STATUS CHAR(1) CHECK(CORRECT_STATUS IN('Y', 'N')),
	TEST_DT DATE,
    PRIMARY KEY(STUDYNOTE_TESTER, SET_NO)
);

COMMENT ON COLUMN STUDYNOTE_TEST.STUDYNOTE_TESTER IS '문제 푼 회원';
COMMENT ON COLUMN STUDYNOTE_TEST.SET_NO IS '학습노트 상세 번호';
COMMENT ON COLUMN STUDYNOTE_TEST.CORRECT_STATUS IS '문제 정답 상태(정답 : Y, 틀림 : N)';
COMMENT ON COLUMN STUDYNOTE_TEST.TEST_DT IS '문제 푼 날짜';



------------ 온스터디 관련 ------------
-- ONSTUDY 테이블 생성
CREATE TABLE ONSTUDY(
	ONSTUDY_NO NUMBER PRIMARY KEY,
	ONSTUDY_TITLE VARCHAR2(90) NOT NULL,
	ONSTUDY_CREATE_DT DATE DEFAULT SYSDATE NOT NULL,
	ONSTUDY_START_DT DATE NOT NULL,
	ONSTUDY_END_DT DATE NOT NULL,
	ONSTUDY_CERTIFY_COUNT NUMBER DEFAULT 3 NOT NULL,
	ONSTUDY_FEE NUMBER DEFAULT 10000 NOT NULL,
	ONSTUDY_ADD_COMMENT VARCHAR2(3000),
	ONSTUDY_STATUS CHAR	DEFAULT 'Y' CHECK(ONSTUDY_STATUS IN('Y', 'N')) NOT NULL,
    ONSTUDY_WEEKS NUMBER,
	ONSTUDY_WRITER NUMBER REFERENCES MEMBER,
	CATEGORY_CD NUMBER REFERENCES STUDY_CATEGORY
);

COMMENT ON COLUMN ONSTUDY.ONSTUDY_NO IS '온스터디 번호';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_TITLE IS '온스터디 제목';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_CREATE_DT IS '온스터디 생성일';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_START_DT IS '온스터디 시작일';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_END_DT IS '온스터디 종료일(최소 시작일 + 2주)';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_CERTIFY_COUNT IS '1주일당 인증 횟수(최소 3, 최대 7)';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_FEE IS '온스터디 참가비(최소 10000)';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_ADD_COMMENT IS '온스터디 추가입력사항';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_STATUS IS '온스터디 상태(정상 : Y, 삭제 : N)';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_WEEKS IS '온스터디 기간(최소 2)';
COMMENT ON COLUMN ONSTUDY.ONSTUDY_WRTIER IS '온스터디 작성자';
COMMENT ON COLUMN ONSTUDY.CATEGORY_CD IS '온스터디 카테고리';

DROP SEQUENCE SEQ_ONO;
CREATE SEQUENCE SEQ_ONO;

INSERT INTO ONSTUDY(ONSTUDY_NO, ONSTUDY_TITLE, ONSTUDY_START_DT, ONSTUDY_END_DT, ONSTUDY_CERTIFY_COUNT,
                                ONSTUDY_FEE, ONSTUDY_ADD_COMMENT, ONSTUDY_WEEKS, ONSTUDY_WRITER, CATEGORY_CD)
VALUES(SEQ_ONO.NEXTVAL, '관리자 테스트', '2020-01-23', '2020-02-13', 3, 50000, '테스트 온스터디입니다', 3, 1, 1);

INSERT INTO ONSTUDY(ONSTUDY_NO, ONSTUDY_TITLE, ONSTUDY_START_DT, ONSTUDY_END_DT, ONSTUDY_CERTIFY_COUNT,
                                ONSTUDY_FEE, ONSTUDY_ADD_COMMENT, ONSTUDY_WEEKS, ONSTUDY_WRITER, CATEGORY_CD)
VALUES(SEQ_ONO.NEXTVAL, '유저1 테스트', '2020-01-23', '2020-02-13', 3, 10000, '테스트 온스터디입니다', 3, 2, 1);

INSERT INTO ONSTUDY(ONSTUDY_NO, ONSTUDY_TITLE, ONSTUDY_START_DT, ONSTUDY_END_DT, ONSTUDY_CERTIFY_COUNT,
                                ONSTUDY_FEE, ONSTUDY_ADD_COMMENT, ONSTUDY_WEEKS, ONSTUDY_WRITER, CATEGORY_CD)
VALUES(SEQ_ONO.NEXTVAL, '유저2 테스트', '2020-01-01', '2020-01-22', 3, 10000, '테스트 온스터디입니다', 3, 2, 1);


-- 회원별 온스터디 테이블 생성
CREATE TABLE MEMBER_ONSTUDY_LIST(
	MEMBER_NO NUMBER REFERENCES MEMBER,
	ONSTUDY_NO NUMBER REFERENCES ONSTUDY,
    REFUND NUMBER DEFAULT -1,
    PRIMARY KEY(MEMBER_NO, ONSTUDY_NO)
);


COMMENT ON COLUMN MEMBER_ONSTUDY_LIST.MEMBER_NO IS '회원';
COMMENT ON COLUMN MEMBER_ONSTUDY_LIST.ONSTUDY_NO IS '온스터디';
COMMENT ON COLUMN MEMBER_ONSTUDY_LIST.REFUND IS '환급금액(미환급시 -1)';

INSERT INTO MEMBER_ONSTUDY_LIST
VALUES(1, 1, DEFAULT);
INSERT INTO MEMBER_ONSTUDY_LIST
VALUES(2, 2, DEFAULT);
INSERT INTO MEMBER_ONSTUDY_LIST
VALUES(2, 3, DEFAULT);


-- 온스터디 인증 게시판 테이블 생성
CREATE TABLE ONSTUDY_BOARD(
	ONSTUDY_BOARD_NO NUMBER PRIMARY KEY,
	ONSTUDY_BOARD_TITLE VARCHAR2(100) NOT NULL,
	ONSTUDY_BOARD_CONTENT CLOB NOT NULL,
	ONSTUDY_BOARD_CREATE_DT DATE DEFAULT SYSDATE NOT NULL,
	ONSTUDY_BOARD_MODIFY_DT DATE DEFAULT SYSDATE NOT NULL,
	ONSTUDY_BOARD_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(ONSTUDY_BOARD_STATUS IN('Y', 'N')) NOT NULL,
	ONSTUDY_BOARD_COUNT NUMBER DEFAULT 0 NOT NULL,
	ONSTUDY_NO NUMBER REFERENCES ONSTUDY,
	ONSTUDY_BOARD_WRITER NUMBER REFERENCES MEMBER
);

COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_BOARD_NO IS '인증게시판 번호';
COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_BOARD_TITLE IS '인증게시판 제목';
COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_BOARD_CONTENT IS '인증게시판 내용';
COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_BOARD_CREATE_DT IS '인증게시판 생성일';
COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_BOARD_MODIFY_DT IS '인증게시판 수정일';
COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_BOARD_STATUS IS '인증게시판 상태(정상 : Y, 삭제 : N)';
COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_BOARD_COUNT IS '인증게시판 조회수';
COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_NO IS '해당 온스터디';    
COMMENT ON COLUMN ONSTUDY_BOARD.ONSTUDY_BOARD_WRITER IS '작성자';

DROP SEQUENCE SEQ_OS_BNO;
CREATE SEQUENCE SEQ_OS_BNO;



-- 온스터디 인증 게시판 사진 첨부 테이블 생성
CREATE TABLE ONSTUDY_BOARD_IMAGE(
	IMAGE_NO NUMBER PRIMARY KEY,
	IMAGE_PATH VARCHAR2(1000) NOT NULL,
	UPLOAD_DT DATE DEFAULT SYSDATE NOT NULL,
	IMAGE_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(IMAGE_STATUS IN('Y', 'N')) NOT NULL,
	ONSTUDY_BOARD_NO NUMBER REFERENCES ONSTUDY_BOARD
);

COMMENT ON COLUMN ONSTUDY_BOARD_IMAGE.IMAGE_NO IS '인증게시판 이미지 번호';
COMMENT ON COLUMN ONSTUDY_BOARD_IMAGE.IMAGE_PATH IS '인증게시판 이미지 경로';
COMMENT ON COLUMN ONSTUDY_BOARD_IMAGE.UPLOAD_DT IS '인증게시판 이미지 업로드 날짜';
COMMENT ON COLUMN ONSTUDY_BOARD_IMAGE.IMAGE_STATUS IS '인증게시판 이미지 상태(정상 : Y, 삭제 : N)';
COMMENT ON COLUMN ONSTUDY_BOARD_IMAGE.ONSTUDY_BOARD_NO IS '해당 게시판 번호';

DROP SEQUENCE SEQ_OS_BD_INO;
CREATE SEQUENCE SEQ_OS_BD_INO;

-- 온스터디 썸네일 사진 테이블 생성
CREATE TABLE ONSTUDY_IMAGE(
	IMAGE_NO NUMBER PRIMARY KEY,
	IMAGE_PATH VARCHAR2(1000) NOT NULL,
	UPLOAD_DT DATE DEFAULT SYSDATE NOT NULL,
	IMAGE_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(IMAGE_STATUS IN('Y', 'N')) NOT NULL,
	ONSTUDY_NO NUMBER REFERENCES ONSTUDY
);

COMMENT ON COLUMN ONSTUDY_IMAGE.IMAGE_NO IS '썸네일 사진 번호';
COMMENT ON COLUMN ONSTUDY_IMAGE.IMAGE_PATH IS '썸네일 사진 경로';
COMMENT ON COLUMN ONSTUDY_IMAGE.UPLOAD_DT IS '썸네일 사진 업로드 날짜';
COMMENT ON COLUMN ONSTUDY_IMAGE.IMAGE_STATUS IS '썸네일 사진 상태(정상 : Y, 삭제 : N)';
COMMENT ON COLUMN ONSTUDY_IMAGE.ONSTUDY_NO IS '온스터디 번호';

DROP SEQUENCE SEQ_OS_INO;
CREATE SEQUENCE SEQ_OS_INO;



-------------- 회원 포인트 상세 내역 뷰 생성 ---------------------
CREATE OR REPLACE VIEW V_POINT_DETAIL AS
    SELECT POINT_STATUS, POINT, POINT_UPDATE_DT, MEMBER_NO, MEMBER_NM, POINT_DETAIL_NM
    FROM POINT_DETAIL
    JOIN MEMBER USING(MEMBER_NO)
    JOIN POINT_DETAIL_TYPE USING(POINT_DETAIL_CD)
    ORDER BY POINT_UPDATE_DT DESC;
    
-------------- 회원 목록 뷰 생성 -----------------
CREATE OR REPLACE VIEW V_MEMBER_LIST AS
    SELECT MEMBER_NO, MEMBER_ID, MEMBER_NM, MEMBER_PHONE, MEMBER_POINT, MEMBER_DECLAR_COUNT, MEMBER_STATUS
    FROM MEMBER
    WHERE MEMBER_GRADE='G';



------------관리자 페이지에서 온스터디 목록을 가져오기 위한 뷰 생성 ------------
CREATE OR REPLACE VIEW V_ONSTUDY_LIST AS
    SELECT ONSTUDY_NO, ONSTUDY_TITLE, ONSTUDY_START_DT, ONSTUDY_END_DT, ONSTUDY_FEE, ONSTUDY_CERTIFY_COUNT, ONSTUDY_STATUS,
        (SELECT COUNT(*) FROM MEMBER_ONSTUDY_LIST WHERE ONSTUDY_NO=O.ONSTUDY_NO) ALL_COUNT, CATEGORY_NM, MEMBER_ID, MEMBER_NO
    FROM ONSTUDY O
    JOIN STUDY_CATEGORY USING(CATEGORY_CD)
    JOIN MEMBER ON(ONSTUDY_WRITER = MEMBER_NO);


------------ 관리자 페이지에서 게시판 목록을 가져오기 위한 뷰 생성 ---------------
CREATE OR REPLACE VIEW V_BOARD_LIST AS
    SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_MODIFY_DT, BOARD_STATUS, MEMBER_ID, BOARD_TYPE
    FROM BOARD
    JOIN MEMBER ON(BOARD_WRITER=MEMBER_NO);


--------------- 카드 결제를 위한 테이블 생성 ----------------
DROP TABLE ORDERS;

CREATE TABLE ORDERS(
    MERCHANT_UID CHAR(16) PRIMARY KEY,
    IMP_UID VARCHAR2(30),
    NAME VARCHAR2(300) NOT NULL,
    AMOUNT NUMBER NOT NULL,
    BUYER_NM VARCHAR2(50) NOT NULL,
    BUYER_TEL CHAR(13) NOT NULL,
    ORDER_STATUS_CD CHAR(1)  DEFAULT '1'
);

CREATE TABLE ORDER_STATUS_CODE(
    ORDER_CODE CHAR PRIMARY KEY,
    ORDER_STATUS VARCHAR2(30) NOT NULL
);

INSERT INTO ORDER_STATUS_CODE VALUES('1', '결제 전');
INSERT INTO ORDER_STATUS_CODE VALUES('2', '결제 완료');
INSERT INTO ORDER_STATUS_CODE VALUES('3', '결제 취소');

DROP SEQUENCE SEQ_ORD_ID;
CREATE SEQUENCE SEQ_ORD_ID;


COMMIT;



------------------ 테스트 -----------------------------

SELECT * FROM BOARD WHERE BOARD_TYPE='D';
SELECT * FROM MEMBER_DECLAR;

SELECT MEMBER_NO, MEMBER_ID, BOARD_TITLE, BOARD_STATUS
FROM MEMBER
JOIN BOARD ON(BOARD_WRITER = MEMBER_NO)
WHERE MEMBER_NO=1;


SELECT COUNT(*) FROM
    (SELECT M.MEMBER_ID, B.BOARD_TITLE, B.BOARD_TYPE, D.DECLAR_STATUS, (SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_NO=D.DECLAR_MEMBER) DE_MEMBER
    FROM MEMBER M
    JOIN BOARD B ON(B.BOARD_WRITER = M.MEMBER_NO)
    JOIN MEMBER_DECLAR D ON(B.BOARD_NO = D.BOARD_NO)
    WHERE B.BOARD_TYPE='F'
    AND M.MEMBER_ID='admin')
WHERE DE_MEMBER='test10';

SELECT DECLAR_MEMBER, MEMBER_ID DECLAR_MEMBER_ID, BOARD_WRITER
FROM MEMBER_DECLAR
JOIN MEMBER ON(DECLAR_MEMBER = MEMBER_NO)
JOIN BOARD USING(BOARD_NO);

SELECT * FROM MEMBER_DECLAR;

--SELECT * FROM MEMBER_DECLAR;
--
--SELECT BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, BOARD_MODIFY_DT, BOARD_STATUS, BOARD_COUNT, MEMBER_ID
--FROM BOARD
--JOIN MEMBER ON(BOARD_WRITER=MEMBER_NO);

--SELECT ROWNUM RNUM, BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_MODIFY_DT, BOARD_STATUS, MEMBER_ID
--FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_MODIFY_DT, BOARD_STATUS, MEMBER_ID
--            FROM V_BOARD_LIST WHERE BOARD_TYPE='F' AND BOARD_CONTENT LIKE '%asd%' ORDER BY BOARD_MODIFY_DT);
--
--SELECT * FROM
--    (SELECT ROWNUM RNUM, BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_MODIFY_DT, BOARD_STATUS, MEMBER_ID
--    FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_MODIFY_DT, BOARD_STATUS, MEMBER_ID
--                FROM V_BOARD_LIST WHERE BOARD_TYPE='F' ORDER BY BOARD_MODIFY_DT))
--WHERE RNUM BETWEEN 1 AND 5;
--
--SELECT * FROM (SELECT ROWNUM RNUM, BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_MODIFY_DT, BOARD_STATUS, MEMBER_ID FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_MODIFY_DT, BOARD_STATUS, MEMBER_ID FROM V_BOARD_LIST WHERE BOARD_TYPE='F' ORDER BY BOARD_MODIFY_DT)) WHERE RNUM BETWEEN 1 AND 5;
--
--SELECT * FROM MEMBER_IMAGE;
--SELECT * FROM BOARD;
--UPDATE ONSTUDY SET ONSTUDY_STATUS='N' WHERE ONSTUDY_NO=26;
--ROLLBACK;
--SELECT * FROM V_ONSTUDY_LIST WHERE ONSTUDY_NO=4;
--SELECT * FROM V_ONSTUDY_LIST
--WHERE ONSTUDY_NO = 4;
--SELECT * FROM ONSTUDY;
--SELECT * FROM MEMBER_ONSTUDY_LIST;
--SELECT * FROM (SELECT ROWNUM RNUM, ONSTUDY_NO, ONSTUDY_TITLE, ONSTUDY_START_DT, ONSTUDY_END_DT, ONSTUDY_FEE, ONSTUDY_STATUS, ALL_COUNT, CATEGORY_NM FROM V_ONSTUDY_LIST);

--DELETE FROM MEMBER WHERE MEMBER_NO=10;
--ROLLBACK;
--UPDATE MEMBER SET MEMBER_STATUS='N' WHERE MEMBER_NO=10;
--SELECT * FROM MEMBER;
--ROLLBACK;

--SELECT MEMBER_NO, MEMBER_ID, MEMBER_NM, MEMBER_PHONE, MEMBER_ENROLL_DT, MEMBER_POINT, MEMBER_DECLAR_COUNT, MEMBER_STATUS, NVL(MEMBER_ACCOUNT, '-') ACCOUNT, BANK_NM
--FROM MEMBER JOIN BANK_TYPE USING(BANK_CD) WHERE MEMBER_NO=2;
--
--SELECT STUDYNOTE_NO, STUDYNOTE_TITLE
--FROM MEMBER_STUDYNOTE_LIST
--JOIN MEMBER USING(MEMBER_NO)
--JOIN STUDYNOTE USING(STUDYNOTE_NO)
--WHERE MEMBER_NO=2;
--
--SELECT * FROM ONSTUDY;
--    
--SELECT ONSTUDY_NO, ONSTUDY_TITLE, ONSTUDY_END_DT
--FROM MEMBER_ONSTUDY_LIST
--JOIN MEMBER USING(MEMBER_NO)
--JOIN ONSTUDY USING(ONSTUDY_NO)
--WHERE MEMBER_NO=2
--AND ONSTUDY_END_DT < SYSDATE;

--SELECT * FROM POINT_DETAIL;
--SELECT * FROM ORDERS;

--SELECT *
--FROM (SELECT ROWNUM RNUM, MEMBER_NO, MEMBER_ID, MEMBER_NM, MEMBER_PHONE, MEMBER_ENROLL_DT, MEMBER_POINT, MEMBER_DECLAR_COUNT, MEMBER_STATUS, MEMBER_ACCOUNT, BANK_CD
--            FROM MEMBER
--            WHERE MEMBER_GRADE='G'
--            AND MEMBER_POINT=0)
--WHERE RNUM BETWEEN 1 AND 5;
--
--SELECT * FROM MEMBER;
--SELECT COUNT(*) FROM MEMBER WHERE MEMBER_GRADE='G';