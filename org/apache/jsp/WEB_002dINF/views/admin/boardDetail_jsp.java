/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-02-02 12:45:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.semi.board.model.vo.Board;
import com.semi.board.model.vo.BoardImage;
import com.semi.member.model.vo.Member;

public final class boardDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/admin/../admin/sideBar.jsp", Long.valueOf(1580646529891L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.semi.board.model.vo.BoardImage");
    _jspx_imports_classes.add("com.semi.member.model.vo.Member");
    _jspx_imports_classes.add("com.semi.board.model.vo.Board");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
 
	Board board = (Board)request.getAttribute("board");
	String declarId = (String)request.getAttribute("declarId");
	ArrayList<BoardImage> files = (ArrayList<BoardImage>)request.getAttribute("files");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/adminPage-boardDetail.css\">\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("<title>온스터디</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t");
      out.write('\n');
      out.write('\n');

	Member admin = (Member) session.getAttribute("loginMember");
	if(admin == null){
		response.sendRedirect(request.getContextPath());
	}
	String msg = (String)session.getAttribute("msg");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<script>\n");
      out.write("\t");
 if(msg != null) {
      out.write("\n");
      out.write("\t\talert(\"");
      out.print( msg );
      out.write("\");\n");
      out.write("\t\t");
 session.removeAttribute("msg"); 
      out.write('\n');
      out.write('	');
 } 
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\"\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n");
      out.write("\tintegrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n");
      out.write("\tcrossorigin=\"anonymous\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"\n");
      out.write("\tintegrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\"\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\n");
      out.write("\t\n");
      out.write("<link rel=\"shortcut icon\" href=\"img/favicon.png\">\n");
      out.write("<link rel=\"apple-touch-icon-precomposed\" href=\"img/icon57.png\">\n");
      out.write("<link rel=\"apple-touch-icon-precomposed\" href=\"img/icon114.png\">\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/common.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/adminPage-sideBar.css\">\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-3.3.1.js\"></script>\n");
      out.write("<title>온 스터디</title>\n");
      out.write("<style>\n");
      out.write("\ta{\n");
      out.write("\t\ttext-decoration: none;\n");
      out.write("\t}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<!-- 관리자 페이지 사이드바 메뉴 -->\n");
      out.write("\t<div class=\"sidenav\">\n");
      out.write("\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/logo1-white.png\" id=\"adminTitleImg\">\n");
      out.write("\t\t<p id=\"adminSidebarTitle\">Admin</p>\n");
      out.write("\t\t<hr>\n");
      out.write("\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/admin/memberList\">회원 목록 조회</a>\n");
      out.write("\t\t<hr>\n");
      out.write("\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/admin/onstudyList\">온스터디 목록 조회</a>\n");
      out.write("\t\t<hr>\n");
      out.write("\t\t<p id=\"adminBoardTitle\">게시판</p>\n");
      out.write("\t\t<a href=\"boardList?boardType=F\">-자유게시판</a>\n");
      out.write("\t\t<a href=\"boardList?boardType=S\">-건의게시판</a>\n");
      out.write("\t\t<a href=\"boardList?boardType=D\">-신고게시판</a>\n");
      out.write("\t</div>\n");
      out.write("\t<!-- 관리자 페이지 사이드바 메뉴 -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"\n");
      out.write("\t\tintegrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"\n");
      out.write("\t\tintegrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write(" \t\t<div id=\"container\">\n");
      out.write("          <div class=\"container\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("              <div id=\"board-content-wrap\" class=\"col-md-12\">\n");
      out.write("              \t<h2 class=\"content-title\">\n");
      out.write(" \t\t          \t");
if(board.getBoardType().equals("F")){ 
      out.write("\n");
      out.write("\t\t          \t<span>자유 게시판</span>\n");
      out.write("\t\t          \t");
}else if(board.getBoardType().equals("S")){ 
      out.write("\n");
      out.write("\t\t          \t<span>건의 게시판</span>\n");
      out.write("\t\t          \t");
}else if(board.getBoardType().equals("D")){ 
      out.write("\n");
      out.write("\t\t          \t<span>신고 게시판</span>\n");
      out.write("\t\t          \t");
}else{ 
      out.write("\n");
      out.write("\t\t          \t<span>잘못된 접근입니다.</span>\n");
      out.write("\t\t          \t");
} 
      out.write("\n");
      out.write("              \t</h2>\n");
      out.write("                <div class=\"board-content\">\n");
      out.write("                  <form class=\"board-form\" action=\"#\" method=\"post\">\n");
      out.write("                    <div class=\"content-wrap\">\n");
      out.write("                      <p class=\"board-content-title\"><span class=\"numbering\">게시판 번호. ");
      out.print( board.getBoardNo() );
      out.write("</span>");
      out.print( board.getBoardTitle() );
      out.write("</p>\n");
      out.write("                      <p class=\"writer-date\">\n");
      out.write("                        <span class=\"writer\">작성자 : ");
      out.print( board.getBoardWriter() );
      out.write("</span>\n");
      out.write("                        <span class=\"date\">작성일 : ");
      out.print( board.getBoardModifyDt() );
      out.write("</span>\n");
      out.write("                      </p>\n");
      out.write("                      <p class=\"content\">\n");
      out.write("                      \t");
      out.print( board.getBoardContent() );
      out.write("\n");
      out.write("                      </p>\n");
      out.write("                      ");
 if(files != null){ 
      out.write("\n");
      out.write("                      <div class=\"board-image-wrap\">\n");
      out.write("                      \t");
 for(int i=0; i<files.size() ; i++) {
                      		String src = request.getContextPath()+"/resources/uploadImages/"+files.get(i).getImageChangeName();
                      	
      out.write("\n");
      out.write("                      \t<img class=\"uploaded-img\" src=\"");
      out.print( src );
      out.write("\" />\n");
      out.write("                      \t<input type=\"hidden\" value=");
      out.print(files.get(i).getImageNo() );
      out.write(">\n");
      out.write("                      \t");
 } 
      out.write("\n");
      out.write("                      </div>\n");
      out.write("                      ");
 } 
      out.write("\n");
      out.write("                      ");
if(board.getBoardType().equals("D")){ 
      out.write("\n");
      out.write("                      <span class=\"writer\"><strong>신고 대상자 : ");
      out.print( declarId );
      out.write("</strong></span>\n");
      out.write("                      ");
} 
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"comment-wrap\">\n");
      out.write("                      <p class=\"comment-title\">댓글</p>\t\n");
      out.write("                      <ul id=\"replyListArea\">\n");
      out.write("\t                    <li class=\"reply-row\" id=\"1\"> \n");
      out.write("\t                   \t\t<span class=\"rWriter\">작성자</span> \n");
      out.write("\t                   \t\t<span class=\"rDate\">2020.01.23</span>\n");
      out.write("\t                   \t\t<p class=\"rContent\">댓글 내용</p>\n");
      out.write("\t                    </li>\n");
      out.write("\t\t\t\t\t  </ul>                      \n");
      out.write("                      <div class=\"your-comment-wrap\">\n");
      out.write("                      \t<p class=\"my-id\">");
      out.print(admin.getMemberId() );
      out.write("</p>\n");
      out.write("                      \t<textArea class=\"input-comment form-control\" name=\"your-comment\" rows=\"2\" id=\"commentContent\" placeholder=\"댓글 내용을 작성해주세요.\" style=\"resize:none\"></textArea>\n");
      out.write("                        <button id=\"addComment\" type=\"button\" class=\"form-control submit-btn orange-hover-btn\">작성하기</button>\n");
      out.write("                      </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"bottom-btn-wrap\">\n");
      out.write("                    \t");
if(board.getBoardStatus() == 'Y'){ 
      out.write("\n");
      out.write("\t\t                   <a href=\"changeBoardStatus?boardNo=");
      out.print(board.getBoardNo() );
      out.write("&status=");
      out.print(board.getBoardStatus() );
      out.write("\"\n");
      out.write("\t\t                   \t\t id=\"board-delete-btn\" class=\"form-control orange-hover-btn go-list-btn\">게시판 삭제</a>                \t\n");
      out.write("                    \t");
}else{ 
      out.write("\n");
      out.write("\t\t                   <a href=\"changeBoardStatus?boardNo=");
      out.print(board.getBoardNo() );
      out.write("&status=");
      out.print(board.getBoardStatus() );
      out.write("\"\n");
      out.write("\t\t                   \t\t id=\"board-re-btn\" class=\"form-control orange-hover-btn go-list-btn\">게시판 복구</a>                \t\n");
      out.write("                    \t");
} 
      out.write("\n");
      out.write("                    \t\n");
      out.write("                    \t");
if(board.getBoardType().equals("D")){ 
      out.write("\n");
      out.write("                     \t\t");
if(board.getDeclarStatus().equals("N")){ 
      out.write("\n");
      out.write("                    \t\t<button type=\"button\" id=\"board-no-declar-btn\" class=\"form-control orange-hover-btn go-list-btn\" value=\"N\">신고무효</button>  \n");
      out.write("                    \t\t<button type=\"button\" id=\"board-declar-btn\" class=\"form-control orange-hover-btn go-list-btn\" value=\"Y\">신고처리</button>\n");
      out.write("                    \t\t");
} 
      out.write("\n");
      out.write("                    \t");
} 
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                  </form>\n");
      out.write("                </div>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("    </div>\n");
      out.write("\t<script>\n");
      out.write("\t\t$(function(){\n");
      out.write("\t\t\t$(\".bottom-btn-wrap button\").on(\"click\", function(){\n");
      out.write("\t\t\t\tvar status = $(this).val();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tlocation.href=\"declar?boardNo=");
      out.print(board.getBoardNo());
      out.write("&declarId=");
      out.print(declarId );
      out.write("&status=\" + status;\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\t");
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
